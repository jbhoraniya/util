#!/usr/bin/env bash

docker_run_publish_ports() {
    local host_port=${2}
    local container_port=${3}
    local host_ip=${5-127.0.0.1}
    docker run -d -p $host_ip:$host_port:$container_port --name $4 $1
}

docker_run_interactive() {
    docker run -it --entrypoint=/bin/bash $1
}

# attach to running container and allocate shell
docker_attach_shell() {
    docker exec -i -t $1 /bin/bash
}

docker_deploy_registry() {
  local auth_dir=$1
  local user=$2
  local passwd=$3
  local registry_volume=$4

  htpasswd -Bbn $2 $3 > $auth_dir/htpasswd

  if [ -z $5 ]; then
      docker run -d \
        -p 5000:5000 \
        --restart=always \
        --name registry \
        -v "$auth_dir":/auth \
        -v "$registry_volume":/var/lib/registry \
        -e "REGISTRY_AUTH=htpasswd" \
        -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
        -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
        registry:2
  else
      local cert_dir=$5

      docker run -d \
        -p 5000:5000 \
        --restart=always \
        --name registry \
        -v "$auth_dir":/auth \
        -v "$registry_volume":/var/lib/registry \
        -e "REGISTRY_AUTH=htpasswd" \
        -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
        -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
        -v $cert_dir:/certs \
        -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
        -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
        registry:2
  fi
}

# API functions

# remove image (directory) from registry
# $1 repo url (full path e.g. IP:PORT/PATH)
# $2 image name
# $3 repo username
docker_remove_image() {
    curl -u $3 -X DELETE $1/$2
}
